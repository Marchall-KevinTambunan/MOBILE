package com.example.foodapp

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.foodapp.ui.theme.FoodAppTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            FoodAppTheme {
                MainScreen()
            }
        }
    }
}

@Composable
fun MainScreen() {
    var buttonClicked by remember { mutableStateOf(false) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp)
    ) {

        Image(
            painter = painterResource(id = R.drawable.ikan_bakar),
            contentDescription = "Ikan Bakar",
            modifier = Modifier
                .fillMaxWidth()
                .height(200.dp)
                .clip(CircleShape),
            contentScale = ContentScale.Crop
        )

        Spacer(modifier = Modifier.height(16.dp))
        Image(
            painter = painterResource(id = R.drawable.papeda_kuahkuning),
            contentDescription = "Papeda Kuah Kuning",
            modifier = Modifier
                .fillMaxWidth()
                .height(200.dp)
                .clip(CircleShape),
            contentScale = ContentScale.Crop
        )

        Spacer(modifier = Modifier.height(16.dp))
        Text(
            text = if (buttonClicked) "Papeda Kuah Kuning dengan Ikan Bakar" else "Ikan Bakar",
            style = MaterialTheme.typography.headlineSmall
        )

        Spacer(modifier = Modifier.height(16.dp))

        Button(onClick = { buttonClicked = !buttonClicked }) {
            Text("Lihat Menu Lengkap")
        }
    }
}

@Preview(showBackground = true)
@Composable
fun DefaultPreview() {
    FoodAppTheme {
        MainScreen()
    }
}
**Penjelasan**.
Pada MainActivity.
Ini adalah kelas utama yang mewarisi dari ComponentActivity. Metode onCreate di sini adalah titik awal eksekusi aplikasi.
setContent: Mengatur konten UI menggunakan Compose. FoodAppTheme adalah tema yang digunakan untuk membungkus komponen UI.
MainScreen:
Ini adalah fungsi @Composable yang mengatur tampilan UI utama aplikasi.
Menggunakan Column untuk menyusun komponen secara vertikal, termasuk gambar dan teks.
buttonClicked: Variabel state untuk melacak apakah tombol telah diklik, digunakan untuk mengganti teks berdasarkan status tombol.
Image: Menampilkan gambar dengan penyesuaian bentuk menggunakan CircleShape.
Text: Menampilkan teks yang bergantung pada status tombol.
Button: Komponen untuk interaksi pengguna. Ketika diklik, akan mengubah status buttonClicked.
@Preview:
Digunakan untuk memberikan pratinjau tampilan dalam Android Studio, memudahkan saya melihat hasil tanpa menjalankan aplikasi di emulator.
File Theme.kt

package com.example.foodapp.ui.theme

import androidx.compose.foundation.isSystemInDarkTheme
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Shapes
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable

private val DarkColorScheme = darkColorScheme(
    primary = androidx.compose.ui.graphics.Color(0xFFBB86FC),
    secondary = androidx.compose.ui.graphics.Color(0xFF03DAC5),
    background = androidx.compose.ui.graphics.Color(0xFF121212)
)

private val LightColorScheme = lightColorScheme(
    primary = androidx.compose.ui.graphics.Color(0xFF6200EE),
    secondary = androidx.compose.ui.graphics.Color(0xFF03DAC6),
    background = androidx.compose.ui.graphics.Color(0xFFFFFFFF)
)

@Composable
fun FoodAppTheme(
    darkTheme: Boolean = isSystemInDarkTheme(),
    content: @Composable () -> Unit
) {
    val colors = if (darkTheme) {
        DarkColorScheme
    } else {
        LightColorScheme
    }

    MaterialTheme(
        colorScheme = colors,
        typography = Typography,
        shapes = Shapes,
        content = content
    )
}

file Shape.kt
package com.example.foodapp.ui.theme

import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Shapes
import androidx.compose.ui.unit.dp

val Shapes = Shapes(
    small = RoundedCornerShape(4.dp),
    medium = RoundedCornerShape(8.dp),
    large = RoundedCornerShape(12.dp)
)
**Penjelasan.**
Shape.
package: Menentukan package tempat file ini berada.
import: Mengimpor kelas yang diperlukan dari Jetpack Compose.
val Shapes: Mendefinisikan objek Shapes dengan tiga tingkat bentuk: small, medium, dan large, yang masing-masing menggunakan 
RoundedCornerShape dengan nilai sudut tertentu.
